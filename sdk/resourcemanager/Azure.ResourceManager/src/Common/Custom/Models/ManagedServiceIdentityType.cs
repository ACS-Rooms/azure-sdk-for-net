// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;
using System.Text.Json;
using System.Text.Json.Serialization;

namespace Azure.ResourceManager.Models
{
    /// <summary> Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed). </summary>
    [JsonConverter(typeof(ManagedServiceIdentityTypeConverter))]
    public readonly partial struct ManagedServiceIdentityType : IEquatable<ManagedServiceIdentityType>
    {
        internal partial class ManagedServiceIdentityTypeConverter : JsonConverter<ManagedServiceIdentityType>
        {
            public override void Write(Utf8JsonWriter writer, ManagedServiceIdentityType model, JsonSerializerOptions options)
            {
                writer.WritePropertyName("type");
                writer.WriteStringValue(model.ToString());
            }
            public override ManagedServiceIdentityType Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                foreach (var property in document.RootElement.EnumerateObject())
                {
                    return new ManagedServiceIdentityType(property.Value.GetString());
                }
                return null;
            }
        }

        /// <summary> JsonConverter for managed service identity type v3. </summary>
#pragma warning disable AZC0014
        public partial class ManagedServiceIdentityTypeV3Converter : JsonConverter<ManagedServiceIdentityType>
        {
            /// <summary> JsonConverter for managed service identity type v3. </summary>
            public static ManagedServiceIdentityTypeV3Converter Default
            {
                get;
            } = new ManagedServiceIdentityTypeV3Converter();

            /// <summary> Serialize managed service identity type to v3 format. </summary>
            /// <param name="writer"> The writer. </param>
            /// <param name="model"> The ManagedServiceIdentityType model which is v4. </param>
            /// <param name="options"> The options for JsonSerializer. </param>
            public override void Write(Utf8JsonWriter writer, ManagedServiceIdentityType model, JsonSerializerOptions options)
            {
                writer.WritePropertyName("type");
                if (model == ManagedServiceIdentityType.SystemAssignedUserAssigned)
                {
                    writer.WriteStringValue("SystemAssigned,UserAssigned");
                }
                else
                {
                    writer.WriteStringValue(model.ToString());
                }
            }

            /// <summary> Deserialize managed service identity type from v3 format. </summary>
            /// <param name="reader"> The reader. </param>
            /// <param name="typeToConvert"> The type to convert </param>
            /// <param name="options"> The options for JsonSerializer. </param>
            public override ManagedServiceIdentityType Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
            {
                using var document = JsonDocument.ParseValue(ref reader);
                foreach (var property in document.RootElement.EnumerateObject())
                {
                    var typeValue = property.Value.GetString();
                    if (typeValue.Equals("SystemAssigned,UserAssigned", StringComparison.InvariantCultureIgnoreCase))
                    {
                        typeValue = "SystemAssigned, UserAssigned";
                    }
                    return new ManagedServiceIdentityType(typeValue);
                }
                return null;
            }
        }
    }
#pragma warning restore AZC0014
}
